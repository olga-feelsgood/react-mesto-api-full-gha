{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nfunction checkRes(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n  }\n}\nexport function registerNewUser(_ref) {\n  let {\n    email,\n    password\n  } = _ref;\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkRes);\n}\n;\nexport function loginUser(_ref2) {\n  let {\n    email,\n    password\n  } = _ref2;\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkRes);\n}\n;\nexport function getContent(_ref3) {\n  let {\n    token\n  } = _ref3;\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(checkRes);\n}\n;","map":{"version":3,"names":["BASE_URL","checkRes","res","ok","json","Promise","reject","status","registerNewUser","_ref","email","password","fetch","method","headers","body","JSON","stringify","then","loginUser","_ref2","getContent","_ref3","token"],"sources":["/Users/olgafilchukova/Desktop/YP/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction checkRes(res) {\n  if (res.ok) {\n    return res.json()\n  }\n  else {\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n  }\n}\n\nexport function registerNewUser({email, password}) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then(checkRes)\n}; \n\nexport function loginUser({email, password}) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then(checkRes)\n}; \n\nexport function getContent({token}) {\n  return fetch(`${BASE_URL}/users/me`, {\n  method: 'GET',\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\" : `Bearer ${token}`\n  }\n})\n.then(checkRes)\n}; "],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,SAASC,QAAQA,CAACC,GAAG,EAAE;EACrB,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB,CAAC,MACI;IACH,OAAOC,OAAO,CAACC,MAAM,CAAE,wBAAuBJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAC7D;AACF;AAEA,OAAO,SAASC,eAAeA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,KAAK;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC/C,OAAOG,KAAK,CAAE,GAAEZ,QAAS,SAAQ,EAAE;IACjCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,KAAK;MAAEC;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAACjB,QAAQ,CAAC;AACjB;AAAC;AAED,OAAO,SAASkB,SAASA,CAAAC,KAAA,EAAoB;EAAA,IAAnB;IAACV,KAAK;IAAEC;EAAQ,CAAC,GAAAS,KAAA;EACzC,OAAOR,KAAK,CAAE,GAAEZ,QAAS,SAAQ,EAAE;IACjCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,KAAK;MAAEC;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAACjB,QAAQ,CAAC;AACjB;AAAC;AAED,OAAO,SAASoB,UAAUA,CAAAC,KAAA,EAAU;EAAA,IAAT;IAACC;EAAK,CAAC,GAAAD,KAAA;EAChC,OAAOV,KAAK,CAAE,GAAEZ,QAAS,WAAU,EAAE;IACrCa,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASS,KAAM;IACpC;EACF,CAAC,CAAC,CACDL,IAAI,CAACjB,QAAQ,CAAC;AACf;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}