{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const registerNewUser = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"email\": email,\n      \"password\": password\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  });\n  // .then((res) => {\n  //   return res;\n  // })\n  // .catch((err) => console.log(err));\n};","map":{"version":3,"names":["BASE_URL","registerNewUser","email","password","fetch","method","headers","body","JSON","stringify","then","response","status","json","e"],"sources":["/Users/olgafilchukova/Desktop/YP/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const registerNewUser = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"email\": email,\n      \"password\": password\n  })\n  })\n  .then((response) => {\n    try {\n      if (response.status === 200){\n        return response.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  // .then((res) => {\n  //   return res;\n  // })\n  // .catch((err) => console.log(err));\n}; "],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAClD,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnB,OAAO,EAAEP,KAAK;MACd,UAAU,EAAEC;IAChB,CAAC;EACD,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI;MACF,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;QAC1B,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB;IACF,CAAC,CAAC,OAAMC,CAAC,EAAC;MACR,OAAQA,CAAC;IACX;EACF,CAAC,CAAC;EACF;EACA;EACA;EACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}